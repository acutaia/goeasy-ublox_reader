{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Documentation : https://acutaia.github.io/goeasy-ublox_reader Source Code : https://github.com/acutaia/goeasy-ublox_reader The project \ud83d\udef0 The GOEASY project will provide the technical and business foundations to enable a new generation of trusted and dependable mass-market Location Based Services and Applications to engage, stimulate and reward citizens for more sustainable behaviours and healthier choices. This three-years project contributes to the consolidation of an environmentally aware and engaged public community in the EU, while delivering added value innovative solutions for Location Based Services and opening new scenarios and opportunities for Smart City solutions (by enabling innovative LBS and IoT services). The research outputs are relevant for EU citizens lives, promoting a healthier environment, increasing sustainability in cities, creating employment opportunities and improving existing technologies. GNSS user technology is now widely available in mass market devices including personal devices, connected vehicles, Internet of Things (IoT) objects, etc. The widespread availability of GNSS receivers, joint with ubiquitous communication capabilities of devices and the ability of cloud-based ICT platforms to federate with each other through open standards and APIs, is enabling a new generation of Location Based Services (LBS) able to support highly-scalable pervasive applications where large number of geographically-distributed users are engaged e.g. in immersive games and commercial services. While GNSS proves to be able to support such applications successfully, a major drawback prevents such approach to be used in more serious (and potentially highly rewarding) mass market applications i.e. the lack of authentication features, resulting in high difficulties in preventing users from spoofing position information to gain advantages or damage other users. GOEASY will be evaluated by means of two concrete use cases, namely the ApesMobility and the AsthmaWatch, both evaluated engaging real users in a medium-scale pilot in Torino (Italy) and Stockholm (Sweden).","title":"GoEasy"},{"location":"index.html#the-project","text":"The GOEASY project will provide the technical and business foundations to enable a new generation of trusted and dependable mass-market Location Based Services and Applications to engage, stimulate and reward citizens for more sustainable behaviours and healthier choices. This three-years project contributes to the consolidation of an environmentally aware and engaged public community in the EU, while delivering added value innovative solutions for Location Based Services and opening new scenarios and opportunities for Smart City solutions (by enabling innovative LBS and IoT services). The research outputs are relevant for EU citizens lives, promoting a healthier environment, increasing sustainability in cities, creating employment opportunities and improving existing technologies. GNSS user technology is now widely available in mass market devices including personal devices, connected vehicles, Internet of Things (IoT) objects, etc. The widespread availability of GNSS receivers, joint with ubiquitous communication capabilities of devices and the ability of cloud-based ICT platforms to federate with each other through open standards and APIs, is enabling a new generation of Location Based Services (LBS) able to support highly-scalable pervasive applications where large number of geographically-distributed users are engaged e.g. in immersive games and commercial services. While GNSS proves to be able to support such applications successfully, a major drawback prevents such approach to be used in more serious (and potentially highly rewarding) mass market applications i.e. the lack of authentication features, resulting in high difficulties in preventing users from spoofing position information to gain advantages or damage other users. GOEASY will be evaluated by means of two concrete use cases, namely the ApesMobility and the AsthmaWatch, both evaluated engaging real users in a medium-scale pilot in Torino (Italy) and Stockholm (Sweden).","title":"The project \ud83d\udef0"},{"location":"deployment.html","text":"","title":"Deployment"},{"location":"ublox_reference_service_platform/overview.html","text":"It is composed by U-Blox API, U-Blox Reader, and a dedicated PostgreSQL database deployed on a Raspberry Pi 4 hardware, connected serially to a U-Blox receiver. The main purpose of this system is to provide real-time and historical collections of trusted GALILEO navigation messages, to be used by the e- Security Infrastructure components of the GOEASY Platform as reference values within the authentication process of location-based data. The reference offered by the set of components quoted is verified through the Position alteration detection library to guarantee that Galileo navigation messages received by the reference system are not corrupted. The distributions of the reference systems among different country is necessary due to the different visibility of the portion of sky, and consequently on the GALILEO satellites, at specific time and location of the earth. The information provided by the reference systems are essential for the position authentication algorithm executed on the GOEASY Platform. Through the mechanisms developed, the e- Security Infrastructure can assure with a certain degree of confidence that third-party computed positions have not been compromised without requiring additional computations on external applications that wants to exploit such system. The overall technical documentation required by the developers is integrated in the source code of each software component developed. In addition, it has been exploited automatic tools for grouping and visualizing that information through static websites. To foster smooth integration and interoperability, each one of the services built has been documented via open API specifications. Consequently, developers can exploit these debugging features to test the REST-based API offered by the platform.","title":"Overview"},{"location":"ublox_reference_service_platform/ublox_reader.html","text":"It is a Python-based software developed by exploiting the async paradigm. During boot, it configures the U-Blox receiver to filter Galileo navigation messages and oversees the serial port connected to it. It is also in charge of setting up the local PostgreSQL database, the tables and to dynamically fill in the entries with the data received. The evolution of the application led to some changes on the data modelling of the reference database. By considering that each reference system will be constantly gathering Galileo data for later usage, even by exploiting indexes features, when databases entries grow over certain thresholds, query results were given with unacceptable delays. Consequently, the design process led to the definition of the following structures to prevent tables to grow excessively with respect to the necessary performances required by the system. Galileo Navigation messages are stored in specific auto generated tables, with a standardized naming, with respect to the satellite source and the reception year. The quoted structure enables higher parallelization of requests and improved scalability in relation to the previous version. Each one of the messages, after being parsed, is asynchronously given to the Position alteration detection library enabling the possibility to apply the OS-NMA algorithm. The results of such process will then update the authenticity field of the navigation message persistently stored by the reference system.","title":"Ublox reader"}]}