#!/usr/bin/env python3
"""
Constants for SerialReceiver

:author: Angelo Cutaia
:copyright: Copyright 2020, Angelo Cutaia
:license: Apache License 2.0
:version: 1.0.0

..

    Copyright 2020 Angelo Cutaia

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

# Standard library
import configparser
import os

# ------------------------------------------------------------------------------

# Module version
__version_info__ = (1, 0, 0)
__version__ = ".".join(str(x) for x in __version_info__)

# Documentation strings format
__docformat__ = "restructuredtext en"

# ------------------------------------------------------------------------------


############
# SETTINGS #
############

config = configparser.ConfigParser()
"""Config object"""

config.read(os.path.join(os.path.abspath(os.path.dirname(__file__)), '..', '..', 'ublox_config.ini'))
"""Read from configuration file"""

# ------------------------------------------------------------------------------


##########
# SERIAL #
##########


SERIAL_PORT = config.get("SERIAL", "PORT")
"""Serial port used by the Ublox Receiver"""

SERIAL_BAUDRATE = config.getint("SERIAL", "BAUDRATE")
"""Baudrate of the serial connection"""

# ------------------------------------------------------------------------------


###############
# SETUP BYTES #
###############


SETUP_BYTES = [
    # DISABLE OTHER MESSAGES
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x0A, 0x00, 0x04, 0x23]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x09, 0x00, 0x04, 0x21]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x00, 0x00, 0xFA, 0x0F]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x01, 0x00, 0xFB, 0x11]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x0D, 0x00, 0x07, 0x29]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x06, 0x00, 0x00, 0x1B]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x02, 0x00, 0xFC, 0x13]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x07, 0x00, 0x01, 0x1D]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x03, 0x00, 0xFD, 0x15]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x04, 0x00, 0xFE, 0x17]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x0F, 0x00, 0x09, 0x2D]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x05, 0x00, 0xFF, 0x19]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF0, 0x08, 0x00, 0x02, 0x1F]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF1, 0x00, 0x00, 0xFB, 0x12]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF1, 0x01, 0x00, 0xFC, 0x14]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF1, 0x03, 0x00, 0xFE, 0x18]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF1, 0x04, 0x00, 0xFF, 0x1A]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF1, 0x05, 0x00, 0x00, 0x1C]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0xF1, 0x06, 0x00, 0x01, 0x1E]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x60, 0x00, 0x6B, 0x02]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x05, 0x00, 0x10, 0x4C]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x22, 0x00, 0x2D, 0x86]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x31, 0x00, 0x3C, 0xA4]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x04, 0x00, 0x0F, 0x4A]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x40, 0x00, 0x4B, 0xC2]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x61, 0x00, 0x6C, 0x04]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x39, 0x00, 0x44, 0xB4]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x13, 0x00, 0x1E, 0x68]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x14, 0x00, 0x1F, 0x6A]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x09, 0x00, 0x14, 0x54]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x34, 0x00, 0x3F, 0xAA]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x01, 0x00, 0x0C, 0x44]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x02, 0x00, 0x0D, 0x46]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x07, 0x00, 0x12, 0x50]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x3C, 0x00, 0x47, 0xBA]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x35, 0x00, 0x40, 0xAC]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x32, 0x00, 0x3D, 0xA6]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x06, 0x00, 0x11, 0x4E]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x03, 0x00, 0x0E, 0x48]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x3B, 0x00, 0x46, 0xB8]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x30, 0x00, 0x3B, 0xA2]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x24, 0x00, 0x2F, 0x8A]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x25, 0x00, 0x30, 0x8C]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x23, 0x00, 0x2E, 0x88]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x20, 0x00, 0x2B, 0x82]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x26, 0x00, 0x31, 0x8E]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x21, 0x00, 0x2C, 0x84]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x11, 0x00, 0x1C, 0x64]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x12, 0x00, 0x1D, 0x66]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x02, 0x15, 0x00, 0x21, 0x6F]),
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x02, 0x13, 0x01, 0x20, 0x6C]),
    # ACTIVATE TIMING
    bytes([0xB5, 0x62, 0x06, 0x01, 0x03, 0x00, 0x01, 0x25, 0x01, 0x31, 0x8D])
]
"""
Bytes used to setup the Serial Receiver in order to disable/enable 
a specific message
"""
